import os
import re

def testMkdir(path):
    if os.path.isdir(path):
        pass
    else:
        os.mkdir(path)

def testShell(shell):
    if os.path.isfile(shell):
        os.remove(shell)
    else:
        pass

def getOrtholog(intersect):
    f = open(intersect,"r")
    lines = f.readlines()
    lines2 = {}.fromkeys(lines).keys()
    ortholog = {}
    for l in lines2:
        l=l.rstrip("\n")
        arr=l.split("\t")
        refer = arr[17].rstrip(";").split("=")[1]
#        target = arr[8].rstrip(";").split("=")[1]
        target = arr[8].rstrip(";").split("=")[1].split(";")[0]
        length = int(arr[-1])
        if refer in ortholog.keys():
            if target in ortholog[refer].keys():
                ortholog[refer][target] += length
            else:
                ortholog[refer][target] = length
        else:
            ortholog[refer] = {}
            ortholog[refer][target] = length
    f.close()
    orth = open(intersect+".ortholog","w")
    for i in ortholog.keys():
        for j in ortholog[i].keys():
            orth.write(i+"\t"+j+"\t"+str(ortholog[i][j])+"\n")
    orth.close()
def pslCheck(spe,path):
    specie = {}
    for i in open("/hwfssz5/ST_DIVERSITY/B10K/USER/xieduo/01.B10K/05.ortholog/specie.list","r"):
        i = i.rstrip("\n")
        specie[i] = 1
    if  spe in specie.keys():
        return True
    else:
        return False
def pslRefProcess(ref,path):
    f2 = open(path+".temp","w")
    nameRef = {}
    for j in open("/hwfssz5/ST_DIVERSITY/B10K/USER/xieduo/01.B10K/05.ortholog/name_convert/"+ref+".table","r"):
        j=j.rstrip("\n")
        j = re.sub(ref+".","",j,2)
        destRef = j.split("\t")[0]
        srcRef = j.split("\t")[1]
        nameRef[srcRef] = destRef
    for i in open(path,"r"):
        arr = i.split("\t")
        if arr[9] in nameRef.keys():
            arr[9] = nameRef[arr[9]]
        else:
            pass
        f2.write("\t".join(arr))
    f2.close()        

def pslProcess(ref,target,path):
    f2 = open(path+".temp","w")
    nameRef = {}
    nameTar = {}
    for j in open("/hwfssz5/ST_DIVERSITY/B10K/USER/xieduo/01.B10K/05.ortholog/name_convert/"+ref+".table","r"):
        j=j.rstrip("\n")
        j = re.sub(ref+".","",j,2)
        destRef = j.split("\t")[0]
        srcRef = j.split("\t")[1]
        nameRef[srcRef] = destRef
    for j in open("/hwfssz5/ST_DIVERSITY/B10K/USER/xieduo/01.B10K/05.ortholog/name_convert/"+target+".table","r"):
        j=j.rstrip("\n")
        j = re.sub(ref+".","",j,2)
        destTar = j.split("\t")[0]
        srcTar = j.split("\t")[1]
        nameTar[srcTar] = destTar
    for i in open(path,"r"):
        arr = i.split("\t")
        if arr[13] in nameTar.keys() and arr[9] in nameRef.keys:
            arr[13] = nameTar[arr[13]]
            arr[9] = nameRef[arr[9]]
        elif arr[13] in nameTar.keys() and arr[9] not in nameRef.keys:
            arr[13] = nameTar[arr[13]]
        elif arr[13] not in nameTar.keys() and arr[9] in nameRef.keys:
            arr[9] = nameRef[arr[9]]
        else:
            pass
        f2.write("\t".join(arr))
    f2.close()
